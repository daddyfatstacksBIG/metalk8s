#!/usr/bin/env python3
# coding: utf-8

"""Script to fix the SSH configuration generated by Vagrant."""

import os
import pathlib
import re
import subprocess
import sys
import tempfile

HOST_RE = re.compile(r'^Host (?P<hostname>[a-zA-Z0-9]+)$')
PORT_RE = re.compile(r'Port (?P<ssh_port>[0-9]+)$')
IP_RE   = re.compile(r'inet (?P<node_ip>.+)/\d+')

def fix_ips(ssh_config):
    """Fix the SSH configuration generated by vagrant.

    This function replace the host local IP by the control plane IP for each
    host.
    Also fix the SSH port to 22.
    """
    hostname = None
    with tempfile.NamedTemporaryFile(
        mode='w', encoding='utf-8', dir=ssh_config.parent
    ) as dst:
        with ssh_config.open(mode='r', encoding='utf-8') as src:
            for line in src:
                match = HOST_RE.match(line)
                if match:
                    hostname = match.group('hostname')
                if 'HostName 127.0.0.1' in line:
                    real_ip = get_node_ip(hostname)
                    line = line.replace('127.0.0.1', real_ip)
                match = PORT_RE.search(line)
                if match:
                    line = line.replace(match.group('ssh_port'), '22')
                dst.write(line)
        os.rename(src.name, '{}.bak'.format(src.name))
        os.link(dst.name, src.name)


def get_node_ip(hostname):
    """Get the control plane IP of the node `hostname`.

    We return the first IP on `eth1`.
    """
    stdout = subprocess.check_output([
        'vagrant', 'ssh', hostname,
        '--',
        'sudo', 'ip', 'a', 'show', 'eth1'
    ]).decode('utf-8')
    return IP_RE.search(stdout).group('node_ip')


if __name__ == '__main__':
    fix_ips(pathlib.Path(sys.argv[1]))

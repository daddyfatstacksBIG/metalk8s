[tox]
skipsdist = true
minversion = 3.4.0

[testenv]
whitelist_externals = bash
basepython = python3
skip_install = true
setenv =
    VIRTUALENV_NO_DOWNLOAD=1

[testenv:lint-python]
description =
    Lint Python files using pylint and mypy (buildchain-related files only for
    now).
deps =
    -r{toxinidir}/buildchain/requirements-{env:OSTYPE}.txt
    -r{toxinidir}/buildchain/requirements-dev.txt
commands =
    pylint        buildchain/dodo.py buildchain/buildchain
    mypy --strict buildchain/dodo.py buildchain/buildchain

[testenv:lint-shell]
description =
    Lint Shell scripts using shellcheck.
whitelist_externals =
    {[testenv]whitelist_externals}
    shellcheck
commands =
    shellcheck doit.sh
    bash -c "shellcheck **/*.sh"
    bash -c "shellcheck **/*.sh.in"

[testenv:lint-yaml]
description =
    Lint Salt and Eve YAML files using yamllint.
deps =
    yamllint==1.15.0
commands =
    bash -c "yamllint eve/main.yml salt/**/*.yaml"

[testenv:tests]
description =
    Run tests suite remotely (uses local Vagrant configuration by default).
deps =
    -r{toxinidir}/tests/requirements.txt
passenv =
    SSH_CONFIG_FILE
    TEST_HOSTS_LIST
    ISO_MOUNTPOINT
setenv =
    VAGRANT_CWD={toxinidir}
commands_pre =
    - bash -c "vagrant ssh-config > {envdir}/vagrant_ssh_config"
commands =
    pytest \
         --ssh-config={env:SSH_CONFIG_FILE:{envdir}/vagrant_ssh_config} \
         --hosts={env:TEST_HOSTS_LIST:bootstrap} \
         --iso-root={env:ISO_MOUNTPOINT:/vagrant/_build/root} \
         {posargs} tests

[testenv:tests-local]
description =
    Run tests suite on the bootstrap node of an installation.
deps = {[testenv:tests]deps}
passenv =
    ISO_MOUNTPOINT
commands = pytest --iso-root={env:ISO_MOUNTPOINT:_build/root} {posargs} tests

[pytest]
filterwarnings =
    ignore:encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.:UserWarning
    ignore:Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point:UserWarning
